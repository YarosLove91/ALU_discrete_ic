<?xml version="1.0" encoding="utf-8"?>
<circuit>
  <version>2</version>
  <attributes/>
  <visualElements>
    <visualElement>
      <elementName>External</elementName>
      <elementAttributes>
        <entry>
          <string>applicationType</string>
          <appType>IVERILOG</appType>
        </entry>
        <entry>
          <string>Label</string>
          <string>carry32_n74882</string>
        </entry>
        <entry>
          <string>externalInputs</string>
          <string>Cin,P:8,G:8</string>
        </entry>
        <entry>
          <string>Width</string>
          <int>10</int>
        </entry>
        <entry>
          <string>Code</string>
          <string>module carry32_n74882 (
    input [7:0] P,      // Пропускные сигналы
    input [7:0] G,      // Генерирующие сигналы
    input Cin,          // Входной перенос
    output [3:0] Cout   // Выходные переносы
);


    // Активный уровень - 0
    assign Cout[0] = ~((G[1]) &amp; P[1]  | 
                    (&amp;(G[1:0]) &amp; P[0] )| 
                    (&amp;(G[1:0]) &amp; ~Cin));

    assign Cout[1] = ~  ((G[3] &amp; P[3]) | 
                        (&amp;(G[3:2]) &amp; P[2]) |
                        (&amp;(G[3:1]) &amp; P[1]) |
                        (&amp;(G[3:0]) &amp; P[0]) |
                        (&amp;(G[3:0]) &amp; ~Cin));

    // Активный уровень - 0
    assign Cout[2] = ~((G[5] &amp; P[5]) |
                       (&amp;(G[5:4]) &amp; P[4]) |
                       (&amp;(G[5:3]) &amp; P[3]) |
                       (&amp;(G[5:2]) &amp; P[2]) |
                       (&amp;(G[5:1]) &amp; P[1]) |
                       (&amp;(G[5:0]) &amp; P[0]) |
                       (&amp;(G[5:0]) &amp; ~Cin));

    assign Cout[3] = ~((G[7] &amp; P[7]) |
                       (&amp;(G[7:6]) &amp; P[6]) |
                       (&amp;(G[7:5]) &amp; P[5]) |
                       (&amp;(G[7:4]) &amp; P[4]) |
                       (&amp;(G[7:3]) &amp; P[3]) |
                       (&amp;(G[7:2]) &amp; P[2]) |
                       (&amp;(G[7:1]) &amp; P[1]) |
                       (&amp;(G[7:0]) &amp; P[0]) |
                       (&amp;(G[7:0]) &amp; ~Cin));

endmodule</string>
        </entry>
        <entry>
          <string>externalOutputs</string>
          <string>Cout:4</string>
        </entry>
      </elementAttributes>
      <pos x="3660" y="240"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>Input Splitting</string>
          <string>1,1,1,1,1,1,1,1</string>
        </entry>
      </elementAttributes>
      <pos x="3540" y="340"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>Input Splitting</string>
          <string>4</string>
        </entry>
        <entry>
          <string>Output Splitting</string>
          <string>1,1,1,1</string>
        </entry>
      </elementAttributes>
      <pos x="3900" y="260"/>
    </visualElement>
    <visualElement>
      <elementName>External</elementName>
      <elementAttributes>
        <entry>
          <string>applicationType</string>
          <appType>IVERILOG</appType>
        </entry>
        <entry>
          <string>Label</string>
          <string>fulladd4</string>
        </entry>
        <entry>
          <string>externalInputs</string>
          <string>Cin,a:4,b:4</string>
        </entry>
        <entry>
          <string>Code</string>
          <string>module fulladd4(
    input Cin,
    input [3:0] a, b,
    output [3:0] sum,
    output Cout,
    output wire nGP, nGG
);
    wire [3:0] p, g;
    wire [4:0] c; // Изменено на [4:0] для включения Cin

    assign p = a ^ b;
    assign g = a &amp; b;

    assign c[0] = Cin;
    genvar i;
        generate
            for (i = 0; i &lt; 4; i = i + 1) begin : carry_gen
                assign c[i+1] = g[i] | (p[i] &amp; c[i]);
            end
        endgenerate

    assign sum = p ^ c[3:0];
    assign Cout = c[4];

    // Групповые сигналы Propagate и Generate для всего блока
    assign nGP =~(&amp;p);
    assign nGG =~(  (g[3]) | 
                    (p[3] &amp; g[2]) |
                    (p[3] &amp; p[2] &amp; g[1]) |
                    (p[3] &amp; p[2] &amp; p[1] &amp; g[0]));

endmodule</string>
        </entry>
        <entry>
          <string>Width</string>
          <int>10</int>
        </entry>
        <entry>
          <string>externalOutputs</string>
          <string>sum:4,Cout,nGP,nGG</string>
        </entry>
      </elementAttributes>
      <pos x="2760" y="300"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>Input Splitting</string>
          <string>32</string>
        </entry>
        <entry>
          <string>Output Splitting</string>
          <string>4,4,4,4,4,4,4,4</string>
        </entry>
      </elementAttributes>
      <pos x="2240" y="320"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>Input Splitting</string>
          <string>32</string>
        </entry>
        <entry>
          <string>Output Splitting</string>
          <string>4,4,4,4,4,4,4,4</string>
        </entry>
      </elementAttributes>
      <pos x="2240" y="500"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Sum_[3:0]</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>4</int>
        </entry>
      </elementAttributes>
      <pos x="4200" y="-200"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Sum_[4:7]</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>4</int>
        </entry>
      </elementAttributes>
      <pos x="4200" y="-160"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Sum_[11:8]</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>4</int>
        </entry>
      </elementAttributes>
      <pos x="4200" y="-120"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Sum_[15:12]</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>4</int>
        </entry>
      </elementAttributes>
      <pos x="4200" y="-80"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>Input Splitting</string>
          <string>4,4,4,4,4,4,4,4,1</string>
        </entry>
        <entry>
          <string>Output Splitting</string>
          <string>33</string>
        </entry>
      </elementAttributes>
      <pos x="4120" y="-400"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Summ[32:0]</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>33</int>
        </entry>
        <entry>
          <string>intFormat</string>
          <intFormat>dec</intFormat>
        </entry>
      </elementAttributes>
      <pos x="4200" y="-400"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>C_in</string>
        </entry>
      </elementAttributes>
      <pos x="2120" y="240"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>A_[31:0]</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>32</int>
        </entry>
      </elementAttributes>
      <pos x="2120" y="320"/>
    </visualElement>
    <visualElement>
      <elementName>In</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>B_[31:0]</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>32</int>
        </entry>
      </elementAttributes>
      <pos x="2120" y="500"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Sum_[19:16]</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>4</int>
        </entry>
      </elementAttributes>
      <pos x="4200" y="-40"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Sum_[23:20]</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>4</int>
        </entry>
      </elementAttributes>
      <pos x="4200" y="0"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Sum_[27:23]</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>4</int>
        </entry>
      </elementAttributes>
      <pos x="4200" y="40"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>Sum_[31:28]</string>
        </entry>
        <entry>
          <string>Bits</string>
          <int>4</int>
        </entry>
      </elementAttributes>
      <pos x="4200" y="80"/>
    </visualElement>
    <visualElement>
      <elementName>Splitter</elementName>
      <elementAttributes>
        <entry>
          <string>Input Splitting</string>
          <string>1,1,1,1,1,1,1,1</string>
        </entry>
      </elementAttributes>
      <pos x="3540" y="540"/>
    </visualElement>
    <visualElement>
      <elementName>External</elementName>
      <elementAttributes>
        <entry>
          <string>applicationType</string>
          <appType>IVERILOG</appType>
        </entry>
        <entry>
          <string>Label</string>
          <string>fulladd4</string>
        </entry>
        <entry>
          <string>externalInputs</string>
          <string>Cin,a:4,b:4</string>
        </entry>
        <entry>
          <string>Code</string>
          <string>module fulladd4(
    input Cin,
    input [3:0] a, b,
    output [3:0] sum,
    output Cout,
    output wire nGP, nGG
);
    wire [3:0] p, g;
    wire [4:0] c; // Изменено на [4:0] для включения Cin

    assign p = a ^ b;
    assign g = a &amp; b;

    assign c[0] = Cin;
    genvar i;
        generate
            for (i = 0; i &lt; 4; i = i + 1) begin : carry_gen
                assign c[i+1] = g[i] | (p[i] &amp; c[i]);
            end
        endgenerate

    assign sum = p ^ c[3:0];
    assign Cout = c[4];

    // Групповые сигналы Propagate и Generate для всего блока
    assign nGP =~(&amp;p);
    assign nGG =~(  (g[3]) | 
                    (p[3] &amp; g[2]) |
                    (p[3] &amp; p[2] &amp; g[1]) |
                    (p[3] &amp; p[2] &amp; p[1] &amp; g[0]));

endmodule</string>
        </entry>
        <entry>
          <string>Width</string>
          <int>10</int>
        </entry>
        <entry>
          <string>externalOutputs</string>
          <string>sum:4,Cout,nGP,nGG</string>
        </entry>
      </elementAttributes>
      <pos x="2760" y="440"/>
    </visualElement>
    <visualElement>
      <elementName>External</elementName>
      <elementAttributes>
        <entry>
          <string>applicationType</string>
          <appType>IVERILOG</appType>
        </entry>
        <entry>
          <string>Label</string>
          <string>fulladd4</string>
        </entry>
        <entry>
          <string>externalInputs</string>
          <string>Cin,a:4,b:4</string>
        </entry>
        <entry>
          <string>Code</string>
          <string>module fulladd4(
    input Cin,
    input [3:0] a, b,
    output [3:0] sum,
    output Cout,
    output wire nGP, nGG
);
    wire [3:0] p, g;
    wire [4:0] c; // Изменено на [4:0] для включения Cin

    assign p = a ^ b;
    assign g = a &amp; b;

    assign c[0] = Cin;
    genvar i;
        generate
            for (i = 0; i &lt; 4; i = i + 1) begin : carry_gen
                assign c[i+1] = g[i] | (p[i] &amp; c[i]);
            end
        endgenerate

    assign sum = p ^ c[3:0];
    assign Cout = c[4];

    // Групповые сигналы Propagate и Generate для всего блока
    assign nGP =~(&amp;p);
    assign nGG =~(  (g[3]) | 
                    (p[3] &amp; g[2]) |
                    (p[3] &amp; p[2] &amp; g[1]) |
                    (p[3] &amp; p[2] &amp; p[1] &amp; g[0]));

endmodule</string>
        </entry>
        <entry>
          <string>Width</string>
          <int>10</int>
        </entry>
        <entry>
          <string>externalOutputs</string>
          <string>sum:4,Cout,nGP,nGG</string>
        </entry>
      </elementAttributes>
      <pos x="2760" y="580"/>
    </visualElement>
    <visualElement>
      <elementName>External</elementName>
      <elementAttributes>
        <entry>
          <string>applicationType</string>
          <appType>IVERILOG</appType>
        </entry>
        <entry>
          <string>Label</string>
          <string>fulladd4</string>
        </entry>
        <entry>
          <string>externalInputs</string>
          <string>Cin,a:4,b:4</string>
        </entry>
        <entry>
          <string>Code</string>
          <string>module fulladd4(
    input Cin,
    input [3:0] a, b,
    output [3:0] sum,
    output Cout,
    output wire nGP, nGG
);
    wire [3:0] p, g;
    wire [4:0] c; // Изменено на [4:0] для включения Cin

    assign p = a ^ b;
    assign g = a &amp; b;

    assign c[0] = Cin;
    genvar i;
        generate
            for (i = 0; i &lt; 4; i = i + 1) begin : carry_gen
                assign c[i+1] = g[i] | (p[i] &amp; c[i]);
            end
        endgenerate

    assign sum = p ^ c[3:0];
    assign Cout = c[4];

    // Групповые сигналы Propagate и Generate для всего блока
    assign nGP =~(&amp;p);
    assign nGG =~(  (g[3]) | 
                    (p[3] &amp; g[2]) |
                    (p[3] &amp; p[2] &amp; g[1]) |
                    (p[3] &amp; p[2] &amp; p[1] &amp; g[0]));

endmodule</string>
        </entry>
        <entry>
          <string>Width</string>
          <int>10</int>
        </entry>
        <entry>
          <string>externalOutputs</string>
          <string>sum:4,Cout,nGP,nGG</string>
        </entry>
      </elementAttributes>
      <pos x="2760" y="720"/>
    </visualElement>
    <visualElement>
      <elementName>External</elementName>
      <elementAttributes>
        <entry>
          <string>applicationType</string>
          <appType>IVERILOG</appType>
        </entry>
        <entry>
          <string>Label</string>
          <string>fulladd4</string>
        </entry>
        <entry>
          <string>externalInputs</string>
          <string>Cin,a:4,b:4</string>
        </entry>
        <entry>
          <string>Code</string>
          <string>module fulladd4(
    input Cin,
    input [3:0] a, b,
    output [3:0] sum,
    output Cout,
    output wire nGP, nGG
);
    wire [3:0] p, g;
    wire [4:0] c; // Изменено на [4:0] для включения Cin

    assign p = a ^ b;
    assign g = a &amp; b;

    assign c[0] = Cin;
    genvar i;
        generate
            for (i = 0; i &lt; 4; i = i + 1) begin : carry_gen
                assign c[i+1] = g[i] | (p[i] &amp; c[i]);
            end
        endgenerate

    assign sum = p ^ c[3:0];
    assign Cout = c[4];

    // Групповые сигналы Propagate и Generate для всего блока
    assign nGP =~(&amp;p);
    assign nGG =~(  (g[3]) | 
                    (p[3] &amp; g[2]) |
                    (p[3] &amp; p[2] &amp; g[1]) |
                    (p[3] &amp; p[2] &amp; p[1] &amp; g[0]));

endmodule</string>
        </entry>
        <entry>
          <string>Width</string>
          <int>10</int>
        </entry>
        <entry>
          <string>externalOutputs</string>
          <string>sum:4,Cout,nGP,nGG</string>
        </entry>
      </elementAttributes>
      <pos x="2760" y="860"/>
    </visualElement>
    <visualElement>
      <elementName>External</elementName>
      <elementAttributes>
        <entry>
          <string>applicationType</string>
          <appType>IVERILOG</appType>
        </entry>
        <entry>
          <string>Label</string>
          <string>fulladd4</string>
        </entry>
        <entry>
          <string>externalInputs</string>
          <string>Cin,a:4,b:4</string>
        </entry>
        <entry>
          <string>Code</string>
          <string>module fulladd4(
    input Cin,
    input [3:0] a, b,
    output [3:0] sum,
    output Cout,
    output wire nGP, nGG
);
    wire [3:0] p, g;
    wire [4:0] c; // Изменено на [4:0] для включения Cin

    assign p = a ^ b;
    assign g = a &amp; b;

    assign c[0] = Cin;
    genvar i;
        generate
            for (i = 0; i &lt; 4; i = i + 1) begin : carry_gen
                assign c[i+1] = g[i] | (p[i] &amp; c[i]);
            end
        endgenerate

    assign sum = p ^ c[3:0];
    assign Cout = c[4];

    // Групповые сигналы Propagate и Generate для всего блока
    assign nGP =~(&amp;p);
    assign nGG =~(  (g[3]) | 
                    (p[3] &amp; g[2]) |
                    (p[3] &amp; p[2] &amp; g[1]) |
                    (p[3] &amp; p[2] &amp; p[1] &amp; g[0]));

endmodule</string>
        </entry>
        <entry>
          <string>Width</string>
          <int>10</int>
        </entry>
        <entry>
          <string>externalOutputs</string>
          <string>sum:4,Cout,nGP,nGG</string>
        </entry>
      </elementAttributes>
      <pos x="2760" y="1000"/>
    </visualElement>
    <visualElement>
      <elementName>External</elementName>
      <elementAttributes>
        <entry>
          <string>applicationType</string>
          <appType>IVERILOG</appType>
        </entry>
        <entry>
          <string>Label</string>
          <string>fulladd4</string>
        </entry>
        <entry>
          <string>externalInputs</string>
          <string>Cin,a:4,b:4</string>
        </entry>
        <entry>
          <string>Code</string>
          <string>module fulladd4(
    input Cin,
    input [3:0] a, b,
    output [3:0] sum,
    output Cout,
    output wire nGP, nGG
);
    wire [3:0] p, g;
    wire [4:0] c; // Изменено на [4:0] для включения Cin

    assign p = a ^ b;
    assign g = a &amp; b;

    assign c[0] = Cin;
    genvar i;
        generate
            for (i = 0; i &lt; 4; i = i + 1) begin : carry_gen
                assign c[i+1] = g[i] | (p[i] &amp; c[i]);
            end
        endgenerate

    assign sum = p ^ c[3:0];
    assign Cout = c[4];

    // Групповые сигналы Propagate и Generate для всего блока
    assign nGP =~(&amp;p);
    assign nGG =~(
	(g[3]) | 
	(p[3] &amp; g[2]) |
	(p[3] &amp; p[2] &amp; g[1]) |
	(p[3] &amp; p[2] &amp; p[1] &amp; g[0]));

endmodule</string>
        </entry>
        <entry>
          <string>Width</string>
          <int>10</int>
        </entry>
        <entry>
          <string>externalOutputs</string>
          <string>sum:4,Cout,nGP,nGG</string>
        </entry>
      </elementAttributes>
      <pos x="2760" y="1140"/>
    </visualElement>
    <visualElement>
      <elementName>External</elementName>
      <elementAttributes>
        <entry>
          <string>applicationType</string>
          <appType>IVERILOG</appType>
        </entry>
        <entry>
          <string>Label</string>
          <string>fulladd4</string>
        </entry>
        <entry>
          <string>externalInputs</string>
          <string>Cin,a:4,b:4</string>
        </entry>
        <entry>
          <string>Code</string>
          <string>module fulladd4(
    input Cin,
    input [3:0] a, b,
    output [3:0] sum,
    output Cout,
    output wire nGP, nGG
);
    wire [3:0] p, g;
    wire [4:0] c; // Изменено на [4:0] для включения Cin

    assign p = a ^ b;
    assign g = a &amp; b;

    assign c[0] = Cin;
    genvar i;
        generate
            for (i = 0; i &lt; 4; i = i + 1) begin : carry_gen
                assign c[i+1] = g[i] | (p[i] &amp; c[i]);
            end
        endgenerate

    assign sum = p ^ c[3:0];
    assign Cout = c[4];

    // Групповые сигналы Propagate и Generate для всего блока
    assign nGP =~(&amp;p);
    assign nGG =~(  (g[3]) | 
                    (p[3] &amp; g[2]) |
                    (p[3] &amp; p[2] &amp; g[1]) |
                    (p[3] &amp; p[2] &amp; p[1] &amp; g[0]));

endmodule</string>
        </entry>
        <entry>
          <string>Width</string>
          <int>10</int>
        </entry>
        <entry>
          <string>externalOutputs</string>
          <string>sum:4,Cout,nGP,nGG</string>
        </entry>
      </elementAttributes>
      <pos x="2760" y="1280"/>
    </visualElement>
    <visualElement>
      <elementName>Out</elementName>
      <elementAttributes>
        <entry>
          <string>Label</string>
          <string>C_out</string>
        </entry>
      </elementAttributes>
      <pos x="4200" y="120"/>
    </visualElement>
  </visualElements>
  <wires>
    <wire>
      <p1 x="2960" y="640"/>
      <p2 x="3420" y="640"/>
    </wire>
    <wire>
      <p1 x="3480" y="640"/>
      <p2 x="3540" y="640"/>
    </wire>
    <wire>
      <p1 x="2260" y="640"/>
      <p2 x="2280" y="640"/>
    </wire>
    <wire>
      <p1 x="2960" y="1280"/>
      <p2 x="3160" y="1280"/>
    </wire>
    <wire>
      <p1 x="2720" y="1280"/>
      <p2 x="2760" y="1280"/>
    </wire>
    <wire>
      <p1 x="3120" y="0"/>
      <p2 x="3900" y="0"/>
    </wire>
    <wire>
      <p1 x="3900" y="0"/>
      <p2 x="4200" y="0"/>
    </wire>
    <wire>
      <p1 x="3860" y="-260"/>
      <p2 x="4120" y="-260"/>
    </wire>
    <wire>
      <p1 x="2340" y="900"/>
      <p2 x="2760" y="900"/>
    </wire>
    <wire>
      <p1 x="2960" y="900"/>
      <p2 x="3320" y="900"/>
    </wire>
    <wire>
      <p1 x="3860" y="260"/>
      <p2 x="3900" y="260"/>
    </wire>
    <wire>
      <p1 x="3920" y="260"/>
      <p2 x="3940" y="260"/>
    </wire>
    <wire>
      <p1 x="3620" y="260"/>
      <p2 x="3660" y="260"/>
    </wire>
    <wire>
      <p1 x="2440" y="1160"/>
      <p2 x="2760" y="1160"/>
    </wire>
    <wire>
      <p1 x="2960" y="1160"/>
      <p2 x="3000" y="1160"/>
    </wire>
    <wire>
      <p1 x="2260" y="520"/>
      <p2 x="2740" y="520"/>
    </wire>
    <wire>
      <p1 x="2960" y="780"/>
      <p2 x="3440" y="780"/>
    </wire>
    <wire>
      <p1 x="2640" y="140"/>
      <p2 x="3980" y="140"/>
    </wire>
    <wire>
      <p1 x="4140" y="-400"/>
      <p2 x="4200" y="-400"/>
    </wire>
    <wire>
      <p1 x="4000" y="-400"/>
      <p2 x="4120" y="-400"/>
    </wire>
    <wire>
      <p1 x="2320" y="1040"/>
      <p2 x="2760" y="1040"/>
    </wire>
    <wire>
      <p1 x="2960" y="1040"/>
      <p2 x="3340" y="1040"/>
    </wire>
    <wire>
      <p1 x="2720" y="400"/>
      <p2 x="3000" y="400"/>
    </wire>
    <wire>
      <p1 x="3300" y="400"/>
      <p2 x="3540" y="400"/>
    </wire>
    <wire>
      <p1 x="2260" y="400"/>
      <p2 x="2480" y="400"/>
    </wire>
    <wire>
      <p1 x="2420" y="1300"/>
      <p2 x="2760" y="1300"/>
    </wire>
    <wire>
      <p1 x="3500" y="660"/>
      <p2 x="3540" y="660"/>
    </wire>
    <wire>
      <p1 x="3880" y="-280"/>
      <p2 x="4120" y="-280"/>
    </wire>
    <wire>
      <p1 x="2960" y="920"/>
      <p2 x="3460" y="920"/>
    </wire>
    <wire>
      <p1 x="3920" y="280"/>
      <p2 x="3960" y="280"/>
    </wire>
    <wire>
      <p1 x="3640" y="280"/>
      <p2 x="3660" y="280"/>
    </wire>
    <wire>
      <p1 x="2300" y="1180"/>
      <p2 x="2760" y="1180"/>
    </wire>
    <wire>
      <p1 x="2960" y="1180"/>
      <p2 x="3360" y="1180"/>
    </wire>
    <wire>
      <p1 x="2260" y="540"/>
      <p2 x="2380" y="540"/>
    </wire>
    <wire>
      <p1 x="3560" y="540"/>
      <p2 x="3640" y="540"/>
    </wire>
    <wire>
      <p1 x="3220" y="540"/>
      <p2 x="3540" y="540"/>
    </wire>
    <wire>
      <p1 x="3040" y="-160"/>
      <p2 x="3980" y="-160"/>
    </wire>
    <wire>
      <p1 x="3980" y="-160"/>
      <p2 x="4200" y="-160"/>
    </wire>
    <wire>
      <p1 x="2660" y="160"/>
      <p2 x="3960" y="160"/>
    </wire>
    <wire>
      <p1 x="3320" y="420"/>
      <p2 x="3540" y="420"/>
    </wire>
    <wire>
      <p1 x="2260" y="420"/>
      <p2 x="2460" y="420"/>
    </wire>
    <wire>
      <p1 x="2960" y="1060"/>
      <p2 x="3480" y="1060"/>
    </wire>
    <wire>
      <p1 x="3100" y="-40"/>
      <p2 x="3920" y="-40"/>
    </wire>
    <wire>
      <p1 x="3920" y="-40"/>
      <p2 x="4200" y="-40"/>
    </wire>
    <wire>
      <p1 x="3140" y="40"/>
      <p2 x="3880" y="40"/>
    </wire>
    <wire>
      <p1 x="3880" y="40"/>
      <p2 x="4200" y="40"/>
    </wire>
    <wire>
      <p1 x="2280" y="1320"/>
      <p2 x="2760" y="1320"/>
    </wire>
    <wire>
      <p1 x="2960" y="1320"/>
      <p2 x="3380" y="1320"/>
    </wire>
    <wire>
      <p1 x="2720" y="680"/>
      <p2 x="3000" y="680"/>
    </wire>
    <wire>
      <p1 x="3520" y="680"/>
      <p2 x="3540" y="680"/>
    </wire>
    <wire>
      <p1 x="3900" y="-300"/>
      <p2 x="4120" y="-300"/>
    </wire>
    <wire>
      <p1 x="2720" y="300"/>
      <p2 x="2760" y="300"/>
    </wire>
    <wire>
      <p1 x="2960" y="300"/>
      <p2 x="3020" y="300"/>
    </wire>
    <wire>
      <p1 x="3920" y="300"/>
      <p2 x="3980" y="300"/>
    </wire>
    <wire>
      <p1 x="2260" y="560"/>
      <p2 x="2360" y="560"/>
    </wire>
    <wire>
      <p1 x="3200" y="560"/>
      <p2 x="3540" y="560"/>
    </wire>
    <wire>
      <p1 x="2960" y="1200"/>
      <p2 x="3500" y="1200"/>
    </wire>
    <wire>
      <p1 x="2680" y="180"/>
      <p2 x="3940" y="180"/>
    </wire>
    <wire>
      <p1 x="2960" y="440"/>
      <p2 x="3040" y="440"/>
    </wire>
    <wire>
      <p1 x="2720" y="440"/>
      <p2 x="2760" y="440"/>
    </wire>
    <wire>
      <p1 x="3340" y="440"/>
      <p2 x="3540" y="440"/>
    </wire>
    <wire>
      <p1 x="2260" y="440"/>
      <p2 x="2440" y="440"/>
    </wire>
    <wire>
      <p1 x="2960" y="1340"/>
      <p2 x="3520" y="1340"/>
    </wire>
    <wire>
      <p1 x="3920" y="-320"/>
      <p2 x="4120" y="-320"/>
    </wire>
    <wire>
      <p1 x="3920" y="320"/>
      <p2 x="4080" y="320"/>
    </wire>
    <wire>
      <p1 x="2260" y="320"/>
      <p2 x="2760" y="320"/>
    </wire>
    <wire>
      <p1 x="2960" y="320"/>
      <p2 x="3000" y="320"/>
    </wire>
    <wire>
      <p1 x="2120" y="320"/>
      <p2 x="2240" y="320"/>
    </wire>
    <wire>
      <p1 x="2720" y="960"/>
      <p2 x="3000" y="960"/>
    </wire>
    <wire>
      <p1 x="2260" y="580"/>
      <p2 x="2340" y="580"/>
    </wire>
    <wire>
      <p1 x="2960" y="580"/>
      <p2 x="3060" y="580"/>
    </wire>
    <wire>
      <p1 x="2680" y="580"/>
      <p2 x="2760" y="580"/>
    </wire>
    <wire>
      <p1 x="3420" y="580"/>
      <p2 x="3540" y="580"/>
    </wire>
    <wire>
      <p1 x="3020" y="-200"/>
      <p2 x="4000" y="-200"/>
    </wire>
    <wire>
      <p1 x="4000" y="-200"/>
      <p2 x="4200" y="-200"/>
    </wire>
    <wire>
      <p1 x="2540" y="460"/>
      <p2 x="2760" y="460"/>
    </wire>
    <wire>
      <p1 x="3360" y="460"/>
      <p2 x="3540" y="460"/>
    </wire>
    <wire>
      <p1 x="2260" y="460"/>
      <p2 x="2420" y="460"/>
    </wire>
    <wire>
      <p1 x="3080" y="-80"/>
      <p2 x="3940" y="-80"/>
    </wire>
    <wire>
      <p1 x="3940" y="-80"/>
      <p2 x="4200" y="-80"/>
    </wire>
    <wire>
      <p1 x="3160" y="80"/>
      <p2 x="3860" y="80"/>
    </wire>
    <wire>
      <p1 x="3860" y="80"/>
      <p2 x="4200" y="80"/>
    </wire>
    <wire>
      <p1 x="2960" y="720"/>
      <p2 x="3080" y="720"/>
    </wire>
    <wire>
      <p1 x="2720" y="720"/>
      <p2 x="2760" y="720"/>
    </wire>
    <wire>
      <p1 x="3940" y="-340"/>
      <p2 x="4120" y="-340"/>
    </wire>
    <wire>
      <p1 x="2260" y="340"/>
      <p2 x="2540" y="340"/>
    </wire>
    <wire>
      <p1 x="3560" y="340"/>
      <p2 x="3620" y="340"/>
    </wire>
    <wire>
      <p1 x="2620" y="340"/>
      <p2 x="2760" y="340"/>
    </wire>
    <wire>
      <p1 x="2960" y="340"/>
      <p2 x="3540" y="340"/>
    </wire>
    <wire>
      <p1 x="2520" y="600"/>
      <p2 x="2760" y="600"/>
    </wire>
    <wire>
      <p1 x="2260" y="600"/>
      <p2 x="2320" y="600"/>
    </wire>
    <wire>
      <p1 x="2960" y="600"/>
      <p2 x="3000" y="600"/>
    </wire>
    <wire>
      <p1 x="3440" y="600"/>
      <p2 x="3540" y="600"/>
    </wire>
    <wire>
      <p1 x="2720" y="1240"/>
      <p2 x="3000" y="1240"/>
    </wire>
    <wire>
      <p1 x="2960" y="860"/>
      <p2 x="3100" y="860"/>
    </wire>
    <wire>
      <p1 x="2660" y="860"/>
      <p2 x="2760" y="860"/>
    </wire>
    <wire>
      <p1 x="3380" y="480"/>
      <p2 x="3540" y="480"/>
    </wire>
    <wire>
      <p1 x="2960" y="480"/>
      <p2 x="3260" y="480"/>
    </wire>
    <wire>
      <p1 x="2740" y="480"/>
      <p2 x="2760" y="480"/>
    </wire>
    <wire>
      <p1 x="2500" y="740"/>
      <p2 x="2760" y="740"/>
    </wire>
    <wire>
      <p1 x="3960" y="-360"/>
      <p2 x="4120" y="-360"/>
    </wire>
    <wire>
      <p1 x="2260" y="360"/>
      <p2 x="2520" y="360"/>
    </wire>
    <wire>
      <p1 x="3260" y="360"/>
      <p2 x="3540" y="360"/>
    </wire>
    <wire>
      <p1 x="2960" y="360"/>
      <p2 x="3220" y="360"/>
    </wire>
    <wire>
      <p1 x="2960" y="1000"/>
      <p2 x="3120" y="1000"/>
    </wire>
    <wire>
      <p1 x="2720" y="1000"/>
      <p2 x="2760" y="1000"/>
    </wire>
    <wire>
      <p1 x="2380" y="620"/>
      <p2 x="2760" y="620"/>
    </wire>
    <wire>
      <p1 x="2260" y="620"/>
      <p2 x="2300" y="620"/>
    </wire>
    <wire>
      <p1 x="3460" y="620"/>
      <p2 x="3540" y="620"/>
    </wire>
    <wire>
      <p1 x="2960" y="620"/>
      <p2 x="3280" y="620"/>
    </wire>
    <wire>
      <p1 x="4080" y="-240"/>
      <p2 x="4120" y="-240"/>
    </wire>
    <wire>
      <p1 x="2120" y="240"/>
      <p2 x="2720" y="240"/>
    </wire>
    <wire>
      <p1 x="2720" y="240"/>
      <p2 x="3660" y="240"/>
    </wire>
    <wire>
      <p1 x="2480" y="880"/>
      <p2 x="2760" y="880"/>
    </wire>
    <wire>
      <p1 x="2960" y="880"/>
      <p2 x="3000" y="880"/>
    </wire>
    <wire>
      <p1 x="2260" y="500"/>
      <p2 x="2620" y="500"/>
    </wire>
    <wire>
      <p1 x="2120" y="500"/>
      <p2 x="2240" y="500"/>
    </wire>
    <wire>
      <p1 x="2960" y="500"/>
      <p2 x="3200" y="500"/>
    </wire>
    <wire>
      <p1 x="2960" y="1140"/>
      <p2 x="3140" y="1140"/>
    </wire>
    <wire>
      <p1 x="2640" y="1140"/>
      <p2 x="2760" y="1140"/>
    </wire>
    <wire>
      <p1 x="3060" y="-120"/>
      <p2 x="3960" y="-120"/>
    </wire>
    <wire>
      <p1 x="3960" y="-120"/>
      <p2 x="4200" y="-120"/>
    </wire>
    <wire>
      <p1 x="4080" y="120"/>
      <p2 x="4200" y="120"/>
    </wire>
    <wire>
      <p1 x="2360" y="760"/>
      <p2 x="2760" y="760"/>
    </wire>
    <wire>
      <p1 x="2960" y="760"/>
      <p2 x="3300" y="760"/>
    </wire>
    <wire>
      <p1 x="3980" y="-380"/>
      <p2 x="4120" y="-380"/>
    </wire>
    <wire>
      <p1 x="2460" y="1020"/>
      <p2 x="2760" y="1020"/>
    </wire>
    <wire>
      <p1 x="2260" y="380"/>
      <p2 x="2500" y="380"/>
    </wire>
    <wire>
      <p1 x="3280" y="380"/>
      <p2 x="3540" y="380"/>
    </wire>
    <wire>
      <p1 x="3200" y="500"/>
      <p2 x="3200" y="560"/>
    </wire>
    <wire>
      <p1 x="3460" y="620"/>
      <p2 x="3460" y="920"/>
    </wire>
    <wire>
      <p1 x="3080" y="-80"/>
      <p2 x="3080" y="720"/>
    </wire>
    <wire>
      <p1 x="2440" y="440"/>
      <p2 x="2440" y="1160"/>
    </wire>
    <wire>
      <p1 x="3340" y="440"/>
      <p2 x="3340" y="1040"/>
    </wire>
    <wire>
      <p1 x="3980" y="140"/>
      <p2 x="3980" y="300"/>
    </wire>
    <wire>
      <p1 x="3980" y="-380"/>
      <p2 x="3980" y="-160"/>
    </wire>
    <wire>
      <p1 x="2320" y="600"/>
      <p2 x="2320" y="1040"/>
    </wire>
    <wire>
      <p1 x="3220" y="360"/>
      <p2 x="3220" y="540"/>
    </wire>
    <wire>
      <p1 x="3860" y="-260"/>
      <p2 x="3860" y="80"/>
    </wire>
    <wire>
      <p1 x="3480" y="640"/>
      <p2 x="3480" y="1060"/>
    </wire>
    <wire>
      <p1 x="3100" y="-40"/>
      <p2 x="3100" y="860"/>
    </wire>
    <wire>
      <p1 x="2460" y="420"/>
      <p2 x="2460" y="1020"/>
    </wire>
    <wire>
      <p1 x="2720" y="400"/>
      <p2 x="2720" y="440"/>
    </wire>
    <wire>
      <p1 x="2720" y="680"/>
      <p2 x="2720" y="720"/>
    </wire>
    <wire>
      <p1 x="2720" y="960"/>
      <p2 x="2720" y="1000"/>
    </wire>
    <wire>
      <p1 x="2720" y="1240"/>
      <p2 x="2720" y="1280"/>
    </wire>
    <wire>
      <p1 x="2720" y="240"/>
      <p2 x="2720" y="300"/>
    </wire>
    <wire>
      <p1 x="3360" y="460"/>
      <p2 x="3360" y="1180"/>
    </wire>
    <wire>
      <p1 x="4000" y="-400"/>
      <p2 x="4000" y="-200"/>
    </wire>
    <wire>
      <p1 x="3620" y="260"/>
      <p2 x="3620" y="340"/>
    </wire>
    <wire>
      <p1 x="2340" y="580"/>
      <p2 x="2340" y="900"/>
    </wire>
    <wire>
      <p1 x="3880" y="-280"/>
      <p2 x="3880" y="40"/>
    </wire>
    <wire>
      <p1 x="3500" y="660"/>
      <p2 x="3500" y="1200"/>
    </wire>
    <wire>
      <p1 x="3120" y="0"/>
      <p2 x="3120" y="1000"/>
    </wire>
    <wire>
      <p1 x="2480" y="400"/>
      <p2 x="2480" y="880"/>
    </wire>
    <wire>
      <p1 x="3380" y="480"/>
      <p2 x="3380" y="1320"/>
    </wire>
    <wire>
      <p1 x="2740" y="480"/>
      <p2 x="2740" y="520"/>
    </wire>
    <wire>
      <p1 x="3640" y="280"/>
      <p2 x="3640" y="540"/>
    </wire>
    <wire>
      <p1 x="3000" y="320"/>
      <p2 x="3000" y="400"/>
    </wire>
    <wire>
      <p1 x="3000" y="600"/>
      <p2 x="3000" y="680"/>
    </wire>
    <wire>
      <p1 x="3000" y="880"/>
      <p2 x="3000" y="960"/>
    </wire>
    <wire>
      <p1 x="3000" y="1160"/>
      <p2 x="3000" y="1240"/>
    </wire>
    <wire>
      <p1 x="2360" y="560"/>
      <p2 x="2360" y="760"/>
    </wire>
    <wire>
      <p1 x="3260" y="360"/>
      <p2 x="3260" y="480"/>
    </wire>
    <wire>
      <p1 x="2620" y="340"/>
      <p2 x="2620" y="500"/>
    </wire>
    <wire>
      <p1 x="3900" y="-300"/>
      <p2 x="3900" y="0"/>
    </wire>
    <wire>
      <p1 x="3520" y="680"/>
      <p2 x="3520" y="1340"/>
    </wire>
    <wire>
      <p1 x="3140" y="40"/>
      <p2 x="3140" y="1140"/>
    </wire>
    <wire>
      <p1 x="2500" y="380"/>
      <p2 x="2500" y="740"/>
    </wire>
    <wire>
      <p1 x="3020" y="-200"/>
      <p2 x="3020" y="300"/>
    </wire>
    <wire>
      <p1 x="2380" y="540"/>
      <p2 x="2380" y="620"/>
    </wire>
    <wire>
      <p1 x="3920" y="-320"/>
      <p2 x="3920" y="-40"/>
    </wire>
    <wire>
      <p1 x="3280" y="380"/>
      <p2 x="3280" y="620"/>
    </wire>
    <wire>
      <p1 x="2640" y="140"/>
      <p2 x="2640" y="1140"/>
    </wire>
    <wire>
      <p1 x="2520" y="360"/>
      <p2 x="2520" y="600"/>
    </wire>
    <wire>
      <p1 x="3160" y="80"/>
      <p2 x="3160" y="1280"/>
    </wire>
    <wire>
      <p1 x="3420" y="580"/>
      <p2 x="3420" y="640"/>
    </wire>
    <wire>
      <p1 x="3040" y="-160"/>
      <p2 x="3040" y="440"/>
    </wire>
    <wire>
      <p1 x="3940" y="180"/>
      <p2 x="3940" y="260"/>
    </wire>
    <wire>
      <p1 x="3940" y="-340"/>
      <p2 x="3940" y="-80"/>
    </wire>
    <wire>
      <p1 x="3300" y="400"/>
      <p2 x="3300" y="760"/>
    </wire>
    <wire>
      <p1 x="2660" y="160"/>
      <p2 x="2660" y="860"/>
    </wire>
    <wire>
      <p1 x="2280" y="640"/>
      <p2 x="2280" y="1320"/>
    </wire>
    <wire>
      <p1 x="2540" y="340"/>
      <p2 x="2540" y="460"/>
    </wire>
    <wire>
      <p1 x="3440" y="600"/>
      <p2 x="3440" y="780"/>
    </wire>
    <wire>
      <p1 x="4080" y="-240"/>
      <p2 x="4080" y="120"/>
    </wire>
    <wire>
      <p1 x="4080" y="120"/>
      <p2 x="4080" y="320"/>
    </wire>
    <wire>
      <p1 x="2420" y="460"/>
      <p2 x="2420" y="1300"/>
    </wire>
    <wire>
      <p1 x="3060" y="-120"/>
      <p2 x="3060" y="580"/>
    </wire>
    <wire>
      <p1 x="2680" y="180"/>
      <p2 x="2680" y="580"/>
    </wire>
    <wire>
      <p1 x="3960" y="160"/>
      <p2 x="3960" y="280"/>
    </wire>
    <wire>
      <p1 x="3960" y="-360"/>
      <p2 x="3960" y="-120"/>
    </wire>
    <wire>
      <p1 x="3320" y="420"/>
      <p2 x="3320" y="900"/>
    </wire>
    <wire>
      <p1 x="2300" y="620"/>
      <p2 x="2300" y="1180"/>
    </wire>
  </wires>
  <measurementOrdering/>
</circuit>